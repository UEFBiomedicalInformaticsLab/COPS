% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rwrfgsea.R
\name{RWRFGSEA}
\alias{RWRFGSEA}
\alias{rwr_wrapper}
\alias{fgsea_wrapper}
\title{Random walk with restart and FGSEA}
\usage{
RWRFGSEA(
  expr,
  gene_network,
  gene_set_list,
  disease_genes = NULL,
  rwr_gene_lists = NULL,
  rwr_seed_size = NULL,
  min_size = 5,
  max_size = 200,
  parallel = 1,
  verbose = FALSE,
  rwr_restart_probability = 0.75,
  rwr_adjacency_normalization = "laplacian",
  rwr_affinity_normalization = "none",
  fgsea_input_cutoff = 0,
  rwr_ecdf = FALSE,
  second_seed_list_reverse_order = FALSE,
  rwr_return_seeds = FALSE,
  fgsea_nperm = 10000,
  ...
)

rwr_wrapper(
  expr,
  gene_network,
  rwr_seed_size = nrow(expr)\%/\%6,
  parallel = 1,
  rwr_restart_probability = 0.75,
  rwr_adjacency_normalization = "laplacian",
  rwr_affinity_normalization = "none",
  ...
)

fgsea_wrapper(
  data_matrix,
  gene_set_list,
  fgsea_input_cutoff = 0,
  parallel = 1,
  fgsea_nperm = 10000,
  logp_scaling = TRUE,
  ...
)
}
\arguments{
\item{expr}{a gene expression matrix with samples on columns}

\item{gene_network}{an \code{igraph.object} with nodes matching to \code{expr} rows}

\item{gene_set_list}{list of character vectors containing gene sets for FGSEA}

\item{disease_genes}{a character vector containing gene IDs associated with the target disease}

\item{rwr_gene_lists}{list containing exactly two character vectors corresponding to gene ids. Used to separate genes for double RWR 
(e.g. up and down regulated seeds) RWR affinities of second seed list will get subtracted from the RWR affinities of the first seed list.}

\item{rwr_seed_size}{integer, controls the number of gene seed candidates to intersect with the disease genes}

\item{min_size}{integer, minimum size of gene sets}

\item{max_size}{integer, maximum size of gene sets}

\item{parallel}{integer, number of threads}

\item{verbose}{TRUE/FALSE}

\item{rwr_restart_probability}{restart probability used for RWR. See \code{\link[dnet]{dRWR}} for more details, defaults to one sixth of rows.}

\item{rwr_adjacency_normalization}{method used to normalise the adjacency matrix of the input graph. See \code{\link[dnet]{dRWR}} for more details.}

\item{rwr_affinity_normalization}{method used to normalise the rwr affinity matrix. See \code{\link[dnet]{dRWR}} for more details.}

\item{fgsea_input_cutoff}{a cutoff value used to select most visited genes for FGSEA.}

\item{rwr_ecdf}{if TRUE, uses \code{\link[COPS]{ecdf_transform}} to transform expression values into empirical cumulative probability density.}

\item{second_seed_list_reverse_order}{if TRUE, seeds for second RWR are selected from based on lowest expression or ecdf.}

\item{rwr_return_seeds}{if TRUE, returns seeds in output list (not implemented)}

\item{fgsea_nperm}{a numeric value determining the number of permutations used in \code{\link[fgsea]{fgseaSimple}}}

\item{...}{extra arguments are ignored}

\item{data_matrix}{numeric values used for ranking, assumes samples on columns}
}
\value{
matrix of enrichment scores
}
\description{
Runs random walk in a given network starting from seed genes selected from most over/under expressed in the data intersected with 
known disease genes. The gene affinities are then processed with FGSEA to yield pathway features.
}
\details{
The default behaviour
}
\section{Functions}{
\itemize{
\item \code{rwr_wrapper()}: Transforms gene-expression values into gene-network node-affinity values

\item \code{fgsea_wrapper()}: Wrapper for fast pre-ranked gene set enrichment analysis (\code{\link[fgsea]{fgseaSimple}})

}}
\examples{
library(parallel)
library(COPS)

ad_data <- ad_ge_micro_zscore
rownames(ad_data) <- as.character(AnnotationDbi::mapIds(org.Hs.eg.db::org.Hs.eg.db, rownames(ad_data), "SYMBOL", "ENSEMBL"))
ad_wgcna_net <- coexpression_network_unweighted(ad_data)
kegg_annotations <- msigdbr::msigdbr(species = "Homo sapiens", category = "C2", subcategory = "CP:KEGG")
list_kegg_annotations <- lapply(split(kegg_annotations, kegg_annotations$gs_name), function(x) x$human_gene_symbol) 

ad_rwrfgsea_res <- RWRFGSEA(ad_data, ad_wgcna_net, list_kegg_annotations, parallel = 2)

# Separate genes (e.g. based on DEA)
set.seed(0)
# toy example random fold-change
ad_fc <- sample(c(1,-1), nrow(ad_data), replace = TRUE)

ad_gene_lists <- list(rownames(ad_data)[ad_fc > 0], rownames(ad_data)[ad_fc < 0])
ad_rwrfgsea_res <- RWRFGSEA(ad_data, ad_wgcna_net, list_kegg_annotations, rwr_genelists = ad_gene_lists, 
                            rwr_ecdf = TRUE, second_seed_list_reverse_order = TRUE, parallel = 2)

\dontrun{
# OTP genes for dermatitis, moderate download size
assoc_score_fields <- paste(paste0("&fields=", c("target.gene_info.symbol", "association_score.datatypes")), collapse = "")
disease_otp <- COPS::retrieveDiseaseGenesOT("MONDO_0002406", assoc_score_fields)[[1]]
otp_genes <- disease_otp$target.gene_info.symbol[disease_otp$association_score.datatypes.genetic_association > 0]

ad_rwrfgsea_res <- RWRFGSEA(ad_data, ad_wgcna_net, list_kegg_annotations, disease_genes = otp_genes, rwr_genelists = ad_gene_lists, 
                            rwr_ecdf = TRUE, second_seed_list_reverse_order = TRUE, parallel = 2)
}

}
